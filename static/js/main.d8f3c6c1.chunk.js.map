{"version":3,"sources":["components/NavBar/MenuItem.js","components/Icon/Icon.js","components/NavBar/NavBarDesktop.js","components/NavBar/NavBarMobile.js","containers/NavBarPage/index.js","components/About.js","components/Projects.js","components/Experience.js","components/Education.js","components/Interests.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["MenuItem","props","Menu","Item","name","header","icon","color","disabled","link","active","onClick","handleItemClick","SemanticIcon","Icon","NavBarDesktop","activeItem","handleSidebar","size","fluid","widths","NavBarMobile","visible","children","stackable","vertical","floated","NavBarPage","e","history","setState","push","value","state","this","Responsive","as","minWidth","onlyComputer","onlyMobile","maxWidth","Component","About","Projects","Experience","Education","Interests","PublicRoutes","exact","from","to","path","component","Project","Interest","createBrowserHistory","App","className","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"0SAoBeA,EAjBE,SAACC,GAChB,OACE,kBAAC,WAAD,KACE,kBAACC,EAAA,EAAKC,KAAN,CACEC,KAAMH,EAAMG,KACZC,OAAQJ,EAAMI,OACdC,KAAML,EAAMK,KACZC,MAAON,EAAMM,MACbC,SAAUP,EAAMO,SAChBC,KAAMR,EAAMQ,KACZC,OAAQT,EAAMS,OACdC,QAASV,EAAMW,oB,SCHRC,EARM,SAAC,GAAc,IAAZT,EAAW,EAAXA,KACtB,OACE,kBAAC,WAAD,KACE,kBAACU,EAAA,EAAD,CAAMV,KAAMA,MC0CHW,EA3CO,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,WAAYJ,EAAqC,EAArCA,gBAAiBK,EAAoB,EAApBA,cACpD,OACE,kBAAC,WAAD,KACE,kBAACf,EAAA,EAAD,CAAMgB,KAAK,QAAQC,OAAK,EAACC,OAAO,KAC9B,kBAAClB,EAAA,EAAKC,KAAN,CAAWE,QAAM,EAACM,QAASM,GACzB,kBAAC,EAAD,CAAcb,KAAK,WAGrB,kBAAC,EAAD,CACEA,KAAK,QACLM,OAAuB,UAAfM,EACRJ,gBAAiBA,IAEnB,kBAAC,EAAD,CACER,KAAK,iBACLM,OAAuB,mBAAfM,EACRJ,gBAAiBA,IAEnB,kBAAC,EAAD,CACER,KAAK,WACLM,OAAuB,aAAfM,EACRJ,gBAAiBA,IAEnB,kBAAC,EAAD,CACER,KAAK,YACLM,OAAuB,cAAfM,EACRJ,gBAAiBA,IAEnB,kBAAC,EAAD,CACER,KAAK,SACLM,OAAuB,WAAfM,EACRJ,gBAAiBA,IAEnB,kBAAC,EAAD,CACER,KAAK,YACLM,OAAuB,cAAfM,EACRJ,gBAAiBA,OCYZS,EAhDM,SAAC,GAMf,IALLL,EAKI,EALJA,WACAJ,EAII,EAJJA,gBAII,EAHJK,cAGI,EAFJK,QAEI,EADJC,SAEA,OACE,kBAAC,WAAD,KACE,kBAACrB,EAAA,EAAD,CAAMsB,WAAS,EAACC,UAAQ,EAACnB,KAAK,UAAUa,OAAK,EAACO,SAAO,GACnD,kBAACxB,EAAA,EAAKC,KAAN,CAAWE,QAAM,GACf,kBAAC,EAAD,CAAcD,KAAK,WAErB,kBAAC,EAAD,CACEA,KAAK,QACLM,OAAuB,UAAfM,EACRJ,gBAAiBA,IAEnB,kBAAC,EAAD,CACER,KAAK,iBACLM,OAAuB,mBAAfM,EACRJ,gBAAiBA,IAEnB,kBAAC,EAAD,CACER,KAAK,WACLM,OAAuB,aAAfM,EACRJ,gBAAiBA,IAEnB,kBAAC,EAAD,CACER,KAAK,YACLM,OAAuB,cAAfM,EACRJ,gBAAiBA,IAEnB,kBAAC,EAAD,CACER,KAAK,SACLM,OAAuB,WAAfM,EACRJ,gBAAiBA,IAEnB,kBAAC,EAAD,CACER,KAAK,YACLM,OAAuB,cAAfM,EACRJ,gBAAiBA,O,SCeZe,E,kDAvDb,WAAY1B,GAAQ,IAAD,8BACjB,cAAMA,IAORW,gBAAkB,SAACgB,EAAD,GAAkB,IAAZxB,EAAW,EAAXA,KACdyB,EAAY,EAAK5B,MAAjB4B,QACR,EAAKC,SAAS,CAAEd,WAAYZ,IAC5ByB,EAAQE,KAAR,qBAA2B3B,KAXV,EAcnBa,cAAgB,SAACe,GAAW,IAClBV,EAAY,EAAKW,MAAjBX,QACR,EAAKQ,SAAS,CAAER,SAAUA,KAd1B,EAAKW,MAAQ,CACXjB,WAAY,QACZM,SAAS,GAJM,E,qDAmBT,IAAD,EACyBY,KAAKD,MAA7BjB,EADD,EACCA,WAAYM,EADb,EACaA,QACZC,EAAaW,KAAKjC,MAAlBsB,SAER,OACE,6BAEE,kBAACY,EAAA,EAAD,CAAYC,GAAIlC,IAAKC,KAAMkC,SAAUF,IAAWG,aAAaD,UAC3D,kBAAC,EAAD,CACErB,WAAYA,EACZC,cAAeiB,KAAKjB,cACpBL,gBAAiBsB,KAAKtB,mBAK1B,kBAACuB,EAAA,EAAD,eACEC,GAAIlC,IAAKC,MACLgC,IAAWI,WAFjB,CAGEF,SAAUF,IAAWI,WAAWF,SAChCG,SAAUL,IAAWI,WAAWC,WAEhC,kBAAC,EAAD,CACExB,WAAYA,EACZM,QAASA,EACTL,cAAeiB,KAAKjB,cACpBL,gBAAiBsB,KAAKtB,iBAErBW,S,GAhDYkB,a,SCHJC,E,uKAEjB,OAAO,0C,GAFwBD,aCAdE,E,uKAEb,OACI,6C,GAH0BF,aCAjBG,E,uKAEb,OACI,+C,GAH4BH,aCAnBI,E,uKAEb,OACI,8C,GAH2BJ,aCAlBK,E,uKAEjB,OAAO,+C,GAF4BL,aCwBxBM,EAjBM,SAAC,GAAiB,IAAflB,EAAc,EAAdA,QACtB,OACE,kBAAC,IAAD,CAAQA,QAASA,GACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUmB,OAAK,EAACC,KAAK,IAAIC,GAAG,qBAC5B,kBAAC,IAAD,CAAUF,OAAK,EAACC,KAAK,cAAcC,GAAG,qBACtC,kBAAC,IAAD,CAAOF,OAAK,EAACG,KAAK,mBAAmBC,UAAWV,IAChD,kBAAC,IAAD,CAAOM,OAAK,EAACG,KAAK,4BAA4BC,UAAWR,IACzD,kBAAC,IAAD,CAAOI,OAAK,EAACG,KAAK,sBAAsBC,UAAWC,IACnD,kBAAC,IAAD,CAAOL,OAAK,EAACG,KAAK,uBAAuBC,UAAWP,IACpD,kBAAC,IAAD,CAAOG,OAAK,EAACG,KAAK,oBAAoBC,UAAWC,IACjD,kBAAC,IAAD,CAAOL,OAAK,EAACG,KAAK,uBAAuBC,UAAWE,OCXtDzB,EAAU0B,cAWDC,MATf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,CAAY5B,QAASA,EAASN,SAAU,UACxC,kBAAC,EAAD,CAAcM,QAASA,MCHvB6B,G,OAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBxC,QACfkC,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MCzFjEC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDWnB,SAAkBrB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIqB,IAAIC,aAAwB7B,OAAOC,SAAS6B,MACpDC,SAAW/B,OAAOC,SAAS8B,OAIvC,OAGF/B,OAAOgC,iBAAiB,QAAQ,WAC9B,IAAM3B,EAAK,UAAMwB,aAAN,sBAEP/B,IAgEV,SAAiCO,EAAOC,GAEtC2B,MAAM5B,EAAO,CACX6B,QAAS,CAAE,iBAAkB,YAE5BxB,MAAK,SAAAyB,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5ChC,UAAUC,cAAcgC,MAAM9B,MAAK,SAAAC,GACjCA,EAAa8B,aAAa/B,MAAK,WAC7BV,OAAOC,SAASyC,eAKpBtC,EAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEAvFAyB,CAAwBtC,EAAOC,GAI/BC,UAAUC,cAAcgC,MAAM9B,MAAK,WACjCO,QAAQC,IACN,iHAMJd,EAAgBC,EAAOC,OCpC/BE,K","file":"static/js/main.d8f3c6c1.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Menu } from \"semantic-ui-react\";\n\nconst MenuItem = (props) => {\n  return (\n    <Fragment>\n      <Menu.Item\n        name={props.name}\n        header={props.header}\n        icon={props.icon}\n        color={props.color}\n        disabled={props.disabled}\n        link={props.link}\n        active={props.active}\n        onClick={props.handleItemClick}\n      />\n    </Fragment>\n  );\n};\n\nexport default MenuItem;\n","import React, { Fragment } from \"react\";\nimport { Icon } from \"semantic-ui-react\";\n\nconst SemanticIcon = ({ name }) => {\n  return (\n    <Fragment>\n      <Icon name={name} />\n    </Fragment>\n  );\n};\n\nexport default SemanticIcon;\n","import React, { Fragment } from \"react\";\nimport { Menu } from \"semantic-ui-react\";\nimport MenuItem from \"./MenuItem\";\nimport SemanticIcon from \"../Icon/Icon\";\n\nconst NavBarDesktop = ({ activeItem, handleItemClick, handleSidebar }) => {\n  return (\n    <Fragment>\n      <Menu size=\"large\" fluid widths=\"7\">\n        <Menu.Item header onClick={handleSidebar}>\n          <SemanticIcon name=\"heart\" />\n        </Menu.Item>\n\n        <MenuItem\n          name=\"about\"\n          active={activeItem === \"about\"}\n          handleItemClick={handleItemClick}\n        />\n        <MenuItem\n          name=\"workExperience\"\n          active={activeItem === \"workexperience\"}\n          handleItemClick={handleItemClick}\n        />\n        <MenuItem\n          name=\"projects\"\n          active={activeItem === \"projects\"}\n          handleItemClick={handleItemClick}\n        />\n        <MenuItem\n          name=\"education\"\n          active={activeItem === \"education\"}\n          handleItemClick={handleItemClick}\n        />\n        <MenuItem\n          name=\"awards\"\n          active={activeItem === \"awards\"}\n          handleItemClick={handleItemClick}\n        />\n        <MenuItem\n          name=\"interests\"\n          active={activeItem === \"interests\"}\n          handleItemClick={handleItemClick}\n        />\n      </Menu>\n    </Fragment>\n  );\n};\n\nexport default NavBarDesktop;\n","import React, { Fragment } from \"react\";\nimport { Menu } from \"semantic-ui-react\";\nimport MenuItem from \"./MenuItem\";\nimport SemanticIcon from \"../Icon/Icon\";\n\nconst NavBarMobile = ({\n  activeItem,\n  handleItemClick,\n  handleSidebar,\n  visible,\n  children,\n}) => {\n  return (\n    <Fragment>\n      <Menu stackable vertical icon=\"labeled\" fluid floated>\n        <Menu.Item header>\n          <SemanticIcon name=\"heart\" />\n        </Menu.Item>\n        <MenuItem\n          name=\"about\"\n          active={activeItem === \"about\"}\n          handleItemClick={handleItemClick}\n        />\n        <MenuItem\n          name=\"workExperience\"\n          active={activeItem === \"workexperience\"}\n          handleItemClick={handleItemClick}\n        />\n        <MenuItem\n          name=\"projects\"\n          active={activeItem === \"projects\"}\n          handleItemClick={handleItemClick}\n        />\n        <MenuItem\n          name=\"education\"\n          active={activeItem === \"education\"}\n          handleItemClick={handleItemClick}\n        />\n        <MenuItem\n          name=\"awards\"\n          active={activeItem === \"awards\"}\n          handleItemClick={handleItemClick}\n        />\n        <MenuItem\n          name=\"interests\"\n          active={activeItem === \"interests\"}\n          handleItemClick={handleItemClick}\n        />\n      </Menu>\n    </Fragment>\n  );\n};\n\nexport default NavBarMobile;\n","import React, { Component } from \"react\";\nimport NavBarDesktop from \"../../components/NavBar/NavBarDesktop\";\nimport NavBarMobile from \"../../components/NavBar/NavBarMobile\";\nimport { Responsive, Menu } from \"semantic-ui-react\";\n\nclass NavBarPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: \"about\",\n      visible: true,\n    };\n  }\n\n  handleItemClick = (e, { name }) => {\n    const { history } = this.props;\n    this.setState({ activeItem: name });\n    history.push(`/portfolio/${name}`);\n  };\n\n  handleSidebar = (value) => {\n    const { visible } = this.state;\n    this.setState({ visible: !visible });\n  };\n\n  render() {\n    const { activeItem, visible } = this.state;\n    const { children } = this.props;\n\n    return (\n      <div>\n        {/* Desktop NavBar */}\n        <Responsive as={Menu.Item} minWidth={Responsive.onlyComputer.minWidth}>\n          <NavBarDesktop\n            activeItem={activeItem}\n            handleSidebar={this.handleSidebar}\n            handleItemClick={this.handleItemClick}\n          />\n        </Responsive>\n\n        {/* Mobile NavBar */}\n        <Responsive\n          as={Menu.Item}\n          {...Responsive.onlyMobile}\n          minWidth={Responsive.onlyMobile.minWidth}\n          maxWidth={Responsive.onlyMobile.maxWidth}\n        >\n          <NavBarMobile\n            activeItem={activeItem}\n            visible={visible}\n            handleSidebar={this.handleSidebar}\n            handleItemClick={this.handleItemClick}\n          >\n            {children}\n          </NavBarMobile>\n        </Responsive>\n      </div>\n    );\n  }\n}\n\nexport default NavBarPage;\n","import React, { Component } from \"react\";\n\nexport default class About extends Component {\n  render() {\n    return <div>About</div>;\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Projects extends Component {\n    render() {\n        return (\n            <div>\n                Projects\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Experience extends Component {\n    render() {\n        return (\n            <div>\n                Experience\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Education extends Component {\n    render() {\n        return (\n            <div>\n                Education\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\n\nexport default class Interests extends Component {\n  render() {\n    return <div>Interests </div>;\n  }\n}\n","import React from \"react\";\nimport { Switch, Redirect, Route, Router } from \"react-router-dom\";\n\nimport About from \"./components/About\";\nimport Project from \"./components/Projects\";\nimport Experience from \"./components/Experience\";\nimport Education from \"./components/Education\";\nimport Interest from \"./components/Interests\";\n\nconst PublicRoutes = ({ history }) => {\n  return (\n    <Router history={history}>\n      <Switch>\n        <Redirect exact from=\"/\" to=\"/portfolio/about\" />\n        <Redirect exact from=\"/portfolio/\" to=\"/portfolio/about\" />\n        <Route exact path=\"/portfolio/about\" component={About} />\n        <Route exact path=\"/portfolio/workExperience\" component={Experience} />\n        <Route exact path=\"/portfolio/projects\" component={Project} />\n        <Route exact path=\"/portfolio/education\" component={Education} />\n        <Route exact path=\"/portfolio/awards\" component={Project} />\n        <Route exact path=\"/portfolio/interests\" component={Interest} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default PublicRoutes;\n","import React from \"react\";\nimport { createBrowserHistory } from \"history\";\n\nimport \"./App.css\";\n\nimport NavBarPage from \"./containers/NavBarPage\";\n\nimport PublicRoutes from \"./routes\";\n\nconst history = createBrowserHistory();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBarPage history={history} children={\"hello\"} />\n      <PublicRoutes history={history} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}